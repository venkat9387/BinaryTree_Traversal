/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution 
{
    //Declare result 
    List<int> result = new List<int>();
    
    public void recFun(TreeNode node)
    {
        //Gurad Clause
        if(node == null)
            return;
        
        //PreOrder Traversal: Visit Node -> Visit Left Sub-Tree -> Visit Right Sub-Tree.
        result.Add(node.val);
        recFun(node.left);
        recFun(node.right);
    }
    public IList<int> PreorderTraversal(TreeNode root) 
    {         
        //Call the recurssion function.
        recFun(root);
        return result;        
    }
}
